parameters:
  - name: platform
    type: string
    default: 'ios'

steps:
  - checkout: self
    path: './s/'
    fetchDepth: 0
  - checkout: aapp_app_ios-certificates
    path: './t/'
    fetchDepth: 0
  # Set up environment
  - template: ./install-node.yml
  - template: ./install-ruby.yml
  - script: gem install bundler:2.4.16
    displayName: 'Install bundler'
  - task: JavaToolInstaller@0
    displayName: 'Install Java SDK'
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
    condition: eq('${{ parameters.platform }}', 'android')
  - script: npm ci
    displayName: 'Install node dependencies'

  # Tests
  - template: ./checks.yml

  # Version info
  - template: ./save-version-info.yml

  # Download and move secure files
  - template: ./copy-android-files.yml
    parameters:
      condition: eq('${{ parameters.platform }}', 'android')
  - template: ./copy-ios-files.yml
    parameters:
      condition: eq('${{ parameters.platform }}', 'ios')

  # Install gems and run Fastlane
  - script: |
      bundle config set --local without 'iosAppBuildDependencies'
    condition: eq('${{ parameters.platform }}', 'android')
    displayName: 'Set Bundler to ignore iosAppBuildDependencies'
  - script: |
      bundle install
    displayName: 'Bundle install Ruby gems'
  - script: |
      bundle exec fastlane buildApps
    displayName: 'Build ${{ parameters.platform }}'
    workingDirectory: ${{ parameters.platform }}
    env:
      VERSION: $(VERSION)
      BUILD_NUMBER: $(BUILD_NUMBER)
      PIWIK_PRO_URL: $(PIWIK_PRO_URL)
      PIWIK_PRO_ID: $(PIWIK_PRO_ID)
      PIWIK_PRO_URL_ACCEPT: $(PIWIK_PRO_URL_ACCEPT)
      PIWIK_PRO_ID_ACCEPT: $(PIWIK_PRO_ID_ACCEPT)
      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: '180'
      FASTLANE_XCODE_LIST_TIMEOUT: '180'
      MATCH_GIT_BEARER_AUTHORIZATION: $(System.AccessToken)
      MATCH_PASSWORD: $(MATCH_PASSWORD)
      API_KEY: $(API_KEY)
      APPLICATION_INSIGHTS_INSTRUMENTATION_KEY_DEV: $(APPLICATION_INSIGHTS_INSTRUMENTATION_KEY_DEV)
      APPLICATION_INSIGHTS_INSTRUMENTATION_KEY_TEST: $(APPLICATION_INSIGHTS_INSTRUMENTATION_KEY_TEST)
      APPLICATION_INSIGHTS_INSTRUMENTATION_KEY_ACC: $(APPLICATION_INSIGHTS_INSTRUMENTATION_KEY_ACC)
      APPLICATION_INSIGHTS_INSTRUMENTATION_KEY_PROD: $(APPLICATION_INSIGHTS_INSTRUMENTATION_KEY_PROD)
      FILTER_API_KEY_ONTW: $(API_KEY_ONTW)
      FILTER_API_KEY_TEST: $(API_KEY_TEST)
      FILTER_API_KEY_ACC: $(API_KEY_ACC)
      FILTER_API_KEY_PROD: $(API_KEY_PROD)

  # Handle artifacts
  - template: ./copy-generic-artifacts.yml
    parameters:
      platform: ${{ parameters.platform }}
  - template: ./copy-android-artifacts.yml
    parameters:
      condition: eq('${{ parameters.platform }}', 'android')
  - template: ./copy-ios-artifacts.yml
    parameters:
      condition: eq('${{ parameters.platform }}', 'ios')
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: ${{ parameters.platform }}-build
