{
  "compilerOptions": {
    "target": "esnext", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "commonjs", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [
      "es2020"
    ], /* Specify library files to be included in the compilation. */
    "allowJs": true, /* Allow javascript files to be compiled. */
    "jsx": "react-native", /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "noEmit": true, /* Do not emit outputs. */
    "isolatedModules": true, /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    "strict": true, /* Enable all strict type-checking options. */
    "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "skipLibCheck": true, /* Skip type checking of declaration files. */
    "resolveJsonModule": true,
    "baseUrl": "./",
    "paths": {
      "@/*": ["src/*"],
      "_app/*": ["src/app/*"],
      "_assets/*": ["src/assets/*"],
      "_components/*": ["src/components/*"],
      "_hooks/*": ["src/_hooks/*"],
      "_modules/*": ["src/modules/*"],
      "_providers/*": ["src/providers/*"],
      "_services/*": ["src/services/*"],
      "_store/*": ["src/store/*"],
      "_styles/*": ["src/styles/*"],
      "_themes/*": ["src/themes/*"],
      "_tokens/*": ["src/tokens/*"],
      "_types/*": ["src/types/*"],
      "_utils/*": ["src/utils/*"]
    },
  },
  "typeRoots": [
    "./types"
  ],
  "exclude": [
    "node_modules",
    "babel.config.js",
    "metro.config.js",
    "jest.config.js"
  ]
}
