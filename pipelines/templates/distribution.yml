parameters:
  - name: platform
    type: string
    default: "ios"
  - name: environment
    type: string
    default: "Internal"

jobs:
  - deployment: ${{ parameters.environment }}
    timeoutInMinutes: 90
    pool:
      vmImage: macOS-13
    environment: "aapp_app_mobile ${{ parameters.platform }} ${{ parameters.environment }}"
    strategy:
      runOnce:
        deploy:
          steps:
            - script: |
                echo "##vso[task.setvariable variable=VersionNumber;]$(cat '$(Pipeline.Workspace)/build/${{ parameters.platform }}-build/version.txt')"
                echo "##vso[build.updatebuildnumber]$(cat '$(Pipeline.Workspace)/build/${{ parameters.platform }}-build/version.txt')-$(Build.SourceBranchName)-$(System.JobId)"
              displayName: "Set version number"
            - task: DownloadSecureFile@1
              displayName: "Download Play Store API key"
              inputs:
                secureFile: "api-5152920179310760437-158079-bad988ebb867.json"
              condition: and(succeeded(), eq('${{ parameters.platform }}', 'android'))
            - script: |
                mkdir -p ${{ parameters.platform }}-build/${{ parameters.platform }}/certs
                cp $(Agent.TempDirectory)/api-5152920179310760437-158079-bad988ebb867.json ${{ parameters.platform }}-build/${{ parameters.platform }}/certs
              workingDirectory: "$(Pipeline.Workspace)/build"
              displayName: "Move Download Play Store API key"
              condition: and(succeeded(), eq('${{ parameters.platform }}', 'android'))
            - task: DownloadSecureFile@1
              displayName: "Download Appstore API key"
              inputs:
                secureFile: "App_Store_Connect_API_Key_4B3KZ8N747.p8"
              condition: and(succeeded(), eq('${{ parameters.platform }}', 'ios'))
            - script: |
                mkdir -p ${{ parameters.platform }}-build/${{ parameters.platform }}/certs
                cp $(Agent.TempDirectory)/App_Store_Connect_API_Key_4B3KZ8N747.p8 ${{ parameters.platform }}-build/${{ parameters.platform }}/certs
              workingDirectory: "$(Pipeline.Workspace)/build"
              displayName: "Move Download Appstore API key"
              condition: and(succeeded(), eq('${{ parameters.platform }}', 'ios'))
            - template: ./install-ruby.yml
              parameters:
                workingDirectory: "$(Pipeline.Workspace)/build/${{ parameters.platform }}-build"
            - script: "bundle install"
              workingDirectory: "$(Pipeline.Workspace)/build/${{ parameters.platform }}-build"
              displayName: "Install Ruby gems"
            - script: |
                bundle exec fastlane distribute${{ parameters.environment }}
              workingDirectory: "$(Pipeline.Workspace)/build/${{ parameters.platform }}-build/${{ parameters.platform }}"
              displayName: "Fastlane distribute"
              env:
                VERSION_NUMBER: $(VersionNumber)
                ARTIFACT_FOLDER: $(Pipeline.Workspace)/build/${{ parameters.platform }}-build/${{ parameters.platform }}/app/build/outputs
                SUPPLY_UPLOAD_MAX_RETRIES: 10
